<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="TS_Orange_JobTitles" time="27" tests="2" failures="0" errors="0">
   <testsuite name="TS_Orange_JobTitles" tests="2" failures="0" errors="0" time="27" timestamp="2019-01-02 16:43:35" hostname="Ebtehal Gamal Yusuf - LPALXY0199.ejadaalex.local" id="Test Suites/TS_Orange_JobTitles">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\Administrator\\git\\Training_1\\Reports\\TS_Orange_JobTitles\\20190102_164332"/>
         <property name="logFiles" value="C:\\Users\\Administrator\\git\\Training_1\\Reports\\TS_Orange_JobTitles\\20190102_164332\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="Ebtehal Gamal Yusuf - LPALXY0199.ejadaalex.local"/>
         <property name="os" value="Windows 7 64bit"/>
         <property name="katalonVersion" value="5.10.0.1"/>
         <property name="browser" value="Chrome 71.0.3578.98"/>
         <property name="hostAddress" value="192.168.3.51"/>
         <property name="sessionId" value="5bdd5947585407b71fae166a8a3d6f81"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 7"/>
      </properties>
      <testcase name="Test Cases/Orange_Website/Login Screen" classname="Test Cases/Orange_Website/Login Screen" status="PASSED">
         <system-out><![CDATA[2019-01-02 16:43:35 - [TEST_CASE][PASSED] - Test Cases/Orange_Website/Login Screen: Test Cases/Orange_Website/Login Screen

2019-01-02 16:43:36 - [TEST_STEP][PASSED] - openBrowser("https://opensource-demo.orangehrmlive.com/index.php/auth/login"): Browser is opened with url: 'https://opensource-demo.orangehrmlive.com/index.php/auth/login'

2019-01-02 16:43:36 - [MESSAGE][INFO] - Starting 'Chrome' driver

2019-01-02 16:43:36 - [MESSAGE][INFO] - Action delay is set to 0 seconds

2019-01-02 16:43:43 - [MESSAGE][PASSED] - Browser is opened with url: 'https://opensource-demo.orangehrmlive.com/index.php/auth/login'

2019-01-02 16:43:43 - [TEST_STEP][PASSED] - setText(findTestObject("Orange/Login/Username"), "Admin"): Text 'Admin' is set on object 'Object Repository/Orange/Login/Username'

2019-01-02 16:43:44 - [MESSAGE][PASSED] - Text 'Admin' is set on object 'Object Repository/Orange/Login/Username'

2019-01-02 16:43:44 - [TEST_STEP][PASSED] - setText(findTestObject("Orange/Login/Password"), "admin123"): Text 'admin123' is set on object 'Object Repository/Orange/Login/Password'

2019-01-02 16:43:44 - [MESSAGE][PASSED] - Text 'admin123' is set on object 'Object Repository/Orange/Login/Password'

2019-01-02 16:43:44 - [TEST_STEP][PASSED] - click(findTestObject("Orange/Login/Login")): Object: 'Object Repository/Orange/Login/Login' is clicked on

2019-01-02 16:43:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Orange/Login/Login' is clicked on]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Orange_Website/JobTitles_Screen" classname="Test Cases/Orange_Website/JobTitles_Screen" status="PASSED">
         <system-out><![CDATA[2019-01-02 16:43:47 - [TEST_CASE][PASSED] - Test Cases/Orange_Website/JobTitles_Screen: Test Cases/Orange_Website/JobTitles_Screen

2019-01-02 16:43:47 - [TEST_STEP][PASSED] - click(findTestObject("Orange/Navigation/MNULST_Admin")): Object: 'Object Repository/Orange/Navigation/MNULST_Admin' is clicked on

2019-01-02 16:43:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Orange/Navigation/MNULST_Admin' is clicked on

2019-01-02 16:43:48 - [TEST_STEP][PASSED] - click(findTestObject("Orange/Navigation/MNUITM_Job")): Object: 'Object Repository/Orange/Navigation/MNUITM_Job' is clicked on

2019-01-02 16:43:48 - [MESSAGE][PASSED] - Object: 'Object Repository/Orange/Navigation/MNUITM_Job' is clicked on

2019-01-02 16:43:48 - [TEST_STEP][PASSED] - click(findTestObject("Orange/Navigation/MNUITM_JobTitles")): Object: 'Object Repository/Orange/Navigation/MNUITM_JobTitles' is clicked on

2019-01-02 16:43:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Orange/Navigation/MNUITM_JobTitles' is clicked on

2019-01-02 16:43:49 - [TEST_STEP][PASSED] - click(findTestObject("Orange/JobTitles/BTN_Add")): Object: 'Object Repository/Orange/JobTitles/BTN_Add' is clicked on

2019-01-02 16:43:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Orange/JobTitles/BTN_Add' is clicked on

2019-01-02 16:43:50 - [TEST_STEP][PASSED] - pk_Functions.CS_AllPageData.AllPageDataFun("Orange_JobTitles_ObjectRepository", "Sheet1", [jobtitles, jobdescription, notes]): pk_Functions.CS_AllPageData.AllPageDataFun is PASSED

2019-01-02 16:43:51 - [MESSAGE][PASSED] - Text 'Qc Engineer12' is set on object ''

2019-01-02 16:43:52 - [MESSAGE][PASSED] - Text 'Test applications' is set on object ''

2019-01-02 16:43:52 - [MESSAGE][PASSED] - Text 'test' is set on object ''

2019-01-02 16:43:52 - [MESSAGE][PASSED] - pk_Functions.CS_AllPageData.AllPageDataFun is PASSED

2019-01-02 16:43:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-01-02 16:43:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-01-02 16:43:53 - [TEST_STEP][PASSED] - tools.uploadFiles.uploadFile(findTestObject("Orange/JobTitles/BTN_ChooseFile"), ""D:\Ebtehal_QC\Extras\logo.jpg""): tools.uploadFiles.uploadFile is PASSED

2019-01-02 16:43:53 - [MESSAGE][PASSED] - Object: 'Object Repository/Orange/JobTitles/BTN_ChooseFile' is clicked on

2019-01-02 16:43:55 - [MESSAGE][PASSED] - tools.uploadFiles.uploadFile is PASSED

2019-01-02 16:43:55 - [TEST_STEP][PASSED] - Thread.sleep(2000): null

2019-01-02 16:43:57 - [TEST_STEP][PASSED] - click(findTestObject("Orange/JobTitles/BTN_Save")): Object: 'Object Repository/Orange/JobTitles/BTN_Save' is clicked on

2019-01-02 16:43:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Orange/JobTitles/BTN_Save' is clicked on

2019-01-02 16:43:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2019-01-02 16:44:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Orange/JobTitles/MSG_SuccessValidationMessage"), 0): Object 'Object Repository/Orange/JobTitles/MSG_SuccessValidationMessage' is present

2019-01-02 16:44:00 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2019-01-02 16:44:00 - [MESSAGE][PASSED] - Object 'Object Repository/Orange/JobTitles/MSG_SuccessValidationMessage' is present

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - ExpectedValue = "Video Editor": null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - Table = driver.findElement(By.id("resultTable")): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - rows_table = Table.findElements(By.tagName("tr")): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - rows_count = rows_table.size(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - for ([row = 0, row < rows_count, (row++)]): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:00 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:01 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - Columns_row = get(row).findElements(By.tagName("td")): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - columns_count = Columns_row.size(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Number of cells In Row " + row + " are " + columns_count): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - for ([column = 0, column < columns_count, (column++)]): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - celltext = get(column).getText(): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - println("Cell Value Of row number " + row + " and column number " + column + " Is " + celltext): null

2019-01-02 16:44:02 - [TEST_STEP][PASSED] - if (celltext == ExpectedValue): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2019-01-02 16:43:35 - [TEST_SUITE][PASSED] - TS_Orange_JobTitles: Test Cases/Orange_Website/JobTitles_Screen]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
